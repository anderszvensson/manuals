<chapter>
<title>Development tools</title>
<subtitle>Extend and customize the dyne liveCD</subtitle>

<para>

Dyne:II comes with an SDK to re-master a dyne liveCD including all
your modifications and to package additional software collections.
In fact, Dyne:II is a Dyne to produce Dyne.

See it like a Nomad Distribution attached to no hardware. You carry
your live cd/dvd/usb key loaded. you boot on it on any machine, you do
your stuff (from a user AND/OR developer point of view), you create a
new live cd, you remove all your traces and you leave the camp.  Just
walk around the world with your rewritable CD or usb-stick and that's
it.

</para>

<para>

In the <ulink url="http://dev.dynebolic.org">dyne developers
lounge</ulink> you'll find up to date documentation on how to create
and publish new modules, repack a new CD and more in general to better
understand the innards of dyne:II.

</para>


<para>

After all, this is a quite simple and minimalistic operating system
(the underlying distribution philosophy can be referred to the
Slackware one and more in general to the KISS principle), all scripted
in shell, awk and sed from scratch. Function libraries along with
auxiliary programs are all included in the /lib/dyne directory, where
the code is fairly documented.

</para>

<para>

As you'll acknowledge from the online documentation, the
<emphasis>dynesdk</emphasis> is present to facilitate all your dyne
related development tasks, try 'dynesdk -h' for a brief help on
functionalities.

</para>

<para>

Not specifically related to dyne:II development, in this new release
the GNU C and C++ Compiler is included along with several scripting
language and relative toolkit externals as Python, Perl, Tcl/Tk and
Ruby. Also 3 different integrated development environments are
included for visual programming: <emphasis>Glade</emphasis> working
with GTK and C, <emphasis>Fluid</emphasis> working with Fltk and C++,
<emphasis>Gambas</emphasis> (provided by the external devel module)
for basic visual programming.

</para>

<para>

And don't forget the force :) of shell scripting, as there is also
<emphasis>gtkdialog</emphasis> that you can use to quickly realize
graphical dialogs and user interaction combining various components.

</para>

</chapter>