# FreeJ python - controller example

# system wide useful modules
import threading
import freej

# initialize FreeJ creating a Contex
cx = freej.Context()

# create an output Screen
scr = freej.SdlScreen()
scr.init(400, 300, 32)

# adds the Screen to the Context
cx.add_screen( scr )


### declare the Trigger Controller
class Frame(freej.TriggerController):

  def __init__(self, *args):
    super(Frame, self).__init__(*args)


  ### the dispatch function is the callback
  ### it will be called at every frame

  def dispatch(self):
      ### rotate around 360 degrees, incrementing
      ### this function is called once every frame
      if self.i>360: self.i=0
      self.i += 1
      self.txt.set_rotate( self.i )
      return 1
      # dispatch should always return an integer value

 

### create an instance of our Trigger Controller
f = Frame()
### set rotation index to zero
f.i = 0
### create a text layer inside the controller
f.txt = freej.TextLayer()
f.txt.init();
f.txt.write("Hello World!")
f.txt.start();
scr.add_layer(f.txt);


# register our Frame Trigger to the Context
cx.register_controller(f)

# start running freej in a separate thread
th = threading.Thread(target = cx.start , name = "freej")
th.start();
